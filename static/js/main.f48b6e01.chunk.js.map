{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","services/userServices.ts","components/TodoList/TodoList.tsx","App.tsx","services/todosServices.ts","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","userID","todo","getUser","usersFromServer","find","cn","TodoList","todos","map","App","useState","setTitle","setUserId","todoList","setTodoList","userIdError","setUserIdError","titleError","setTitleError","newId","Math","max","users","action","method","onSubmit","event","preventDefault","trim","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"sMAAe,G,YAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4BC3DI,GACb,CACEH,GAAI,EACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,GACJI,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,EACJI,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,uBCVCC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKL,OAA7C,SACGK,EAAKP,QCDL,IAAMU,EAA4B,SAAC,GAAc,ICN5BC,EDMgBC,EAAW,EAAXA,KACpCC,GCPoBF,EDOEC,EAAKP,OCNjBS,EAAgBC,MAAK,SAACR,GAAD,OAAUA,EAAKR,KAAOY,MAAY,MDQvE,OACE,0BAEE,UAASC,EAAKb,GACdS,UAAWQ,IAAG,WAAY,CAAE,sBAAuBJ,EAAKR,YAH1D,UAKE,oBAAII,UAAU,kBAAd,SACGI,EAAKT,QAGPU,GAAW,cAAC,EAAD,CAAUN,KAAMM,MARvBD,EAAKb,KENHkB,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASV,UAAU,WAAnB,SACGU,EAAMC,KAAI,SAACP,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKb,UCJX,IAAMqB,EAAgB,WAC3B,ICPoCF,EDOpC,EAA0BG,mBAAS,IAAnC,mBAAOlB,EAAP,KAAcmB,EAAd,KACA,EAA4BD,mBAAS,GAArC,mBAAOhB,EAAP,KAAekB,EAAf,KACA,EAAgCF,mBAASH,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACMC,GCZ8BZ,EDYRM,ECXrBO,KAAKC,IAAL,MAAAD,KAAI,YAAQb,EAAMC,KAAI,SAAAP,GAAI,OAAIA,EAAKb,QDWF,GAClCkC,EAAK,YAAOnB,GAsDlB,OACE,sBAAKN,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,2BAEA,uBACER,KAAI,eAAU8B,GACdI,OAAO,aACPC,OAAO,OACPC,SA1C2D,SAACC,GAChEA,EAAMC,iBAGJX,EADEtB,GAAU,GAMO,KAAjBF,EAAMoC,OACRV,GAAc,GAEdA,GAAc,GAGXxB,EAAS,GAAwB,KAAjBF,EAAMoC,SACzBZ,GAAe,GACfE,GAAc,GAKhBJ,EAAY,GAAD,mBACND,GADM,CAET,CACEzB,GAAI+B,EACJ3B,QACAC,WAAW,EACXC,aA7CJiB,EAAS,IACTC,EAAU,KA2DNf,UAAU,MALZ,UAOE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,UAAf,UACE,uBACEA,UAAU,qBACVT,GAAE,UAAK+B,GACPU,KAAK,OACLC,YAAY,uBACZ,UAAQ,aACRC,MAAOvC,EACPwC,SAlEsB,SAACN,GACjCf,EAASe,EAAMO,OAAOF,OACtBb,GAAc,MAkELD,GAAc,qBAAKpB,UAAU,QAAf,uCAInB,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SACE,yBACE,UAAQ,aACRT,GAAE,qBAAgB+B,GAClBY,MAAOrC,EACPsC,SAzEqB,SAACN,GAClCd,GAAWc,EAAMO,OAAOF,OACxBf,GAAe,IAmEL,UAME,wBAAQe,MAAM,IAAIG,UAAQ,EAA1B,2BACCZ,EAAMd,KAAI,gBAAGpB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACT,wBAEE0C,MAAO3C,EAFT,SAIGC,GAHID,WAQZ2B,GAAe,qBAAKlB,UAAU,QAAf,uCAIpB,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACEA,UAAU,iBACVT,GAAG,SACHyC,KAAK,SACL,UAAQ,eAJV,wBAYN,cAAC,EAAD,CAAUtB,MAAOM,QElIvBsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f48b6e01.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../services/userServices';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const getUser = getUserById(todo.userId);\n\n  return (\n    <article\n      key={todo.id}\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {getUser && <UserInfo user={getUser} />}\n\n    </article>\n  );\n};\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userID: number): User | null {\n  const person = (usersFromServer.find((user) => user.id === userID)) || null;\n\n  return person;\n}\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo: Todo) => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport 'bulma';\nimport usersFromServer from './api/users';\nimport todos from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport getMaxTodosId from './services/todosServices';\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todoList, setTodoList] = useState(todos);\n  const [userIdError, setUserIdError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n  const newId = getMaxTodosId(todoList) + 1;\n  const users = [...usersFromServer];\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  // eslint-disable-next-line\n  const handlerOnChangeTitleField = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  // eslint-disable-next-line\n  const handlerOnChangeSelectField = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserIdError(false);\n  };\n\n  // eslint-disable-next-line\n  const handlerSubmit: React.ChangeEventHandler<HTMLFormElement> = (event): void => {\n    event.preventDefault();\n\n    if (userId <= 0) {\n      setUserIdError(true);\n    } else {\n      setUserIdError(false);\n    }\n\n    if (title.trim() === '') {\n      setTitleError(true);\n    } else {\n      setTitleError(false);\n    }\n\n    if ((userId > 0) && (title.trim() !== '')) {\n      setUserIdError(false);\n      setTitleError(false);\n    } else {\n      return;\n    }\n\n    setTodoList([\n      ...todoList,\n      {\n        id: newId,\n        title,\n        completed: false,\n        userId,\n      },\n    ]);\n    reset();\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form\n        name={`form ${newId}`}\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handlerSubmit}\n        className=\"box\"\n      >\n        <div className=\"field\">\n          <div className=\"control\">\n            <input\n              className=\"input input-length\"\n              id={`${newId}`}\n              type=\"text\"\n              placeholder=\"Please enter a title\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handlerOnChangeTitleField}\n            />\n            {titleError && <div className=\"error\">Please enter a title</div>}\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <div className=\"control\">\n            <div className=\"select\">\n              <select\n                data-cy=\"userSelect\"\n                id={`selectFild ${newId}`}\n                value={userId}\n                onChange={handlerOnChangeSelectField}\n              >\n                <option value=\"0\" disabled>Choose a user</option>\n                {users.map(({ id, name }) => (\n                  <option\n                    key={id}\n                    value={id}\n                  >\n                    {name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            {userIdError && <div className=\"error\">Please choose a user</div>}\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <div className=\"control\">\n            <button\n              className=\"button is-link\"\n              id=\"submit\"\n              type=\"submit\"\n              data-cy=\"submitButton\"\n            >\n              Add\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport default function getMaxTodosId(todos: Todo[]): number {\n  return Math.max(...todos.map(todo => todo.id));\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}